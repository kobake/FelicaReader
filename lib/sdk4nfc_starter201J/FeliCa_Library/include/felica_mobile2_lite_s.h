// felica_mobile2_lite.h -*-c++-*-
// FeliCa Access Library
// Copyright 2007 Sony Corporation

// [CAUTION] This file is automatically generated. Do not edit this file.

#ifndef __FELICA_MOBILE2_LITE_H__
#define __FELICA_MOBILE2_LITE_H__

#ifndef GNU_LINUX
#ifndef MICROSOFT_WINDOWS
#define MICROSOFT_WINDOWS
#endif // MICROSOFT_WINDOWS
#endif // GNU_LINUX

#ifdef MICROSOFT_WINDOWS
#ifdef LIBRARY_EXPORTS
#define LIBRARY_API __declspec(dllexport)
#else
#define LIBRARY_API __declspec(dllimport)
#endif // LIBRARY_EXPORTS
#endif // MICROSOFT_WINDOWS
#ifdef GNU_LINUX
#define LIBRARY_API
#endif // GNU_LINUX

#ifdef STDCALL
#define CALLTYPE __stdcall
#else
#define CALLTYPE
#endif

#include "falp_error.h"

#ifdef MICROSOFT_WINDOWS
#pragma pack(push, felica_h, 8)
#endif

#ifdef __cplusplus
#else if
   #define bool  unsigned char
   #define true  1
   #define false 0
#endif

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

// FALPイベントの定義
#define FALP_EVENT_SEND_READY                        (0x00000001)    // 送信可能イベント
#define FALP_EVENT_RECV_READY                        (0x00000002)    // 受信可能イベント
#define FALP_EVENT_SHUTDOWNED                        (0x00000004)    // 切断イベント
#define FALP_EVENT_SEND_EMPTY                        (0x00000008)	 // 送信データなしイベント

// FALPシャットダウンフラグの定義
#define FALP_SHUTDOWN_FLAG_SEND                        (0x00000001)    // 送信シャットダウン
#define FALP_SHUTDOWN_FLAG_RECV                        (0x00000002)    // 受信シャットダウン
#define FALP_SHUTDOWN_FLAG_BOTH                        (0x00000003)    // 送受信シャットダウン

LIBRARY_API bool CALLTYPE falp_open(void);
LIBRARY_API bool CALLTYPE falp_close(void);
LIBRARY_API bool CALLTYPE falp_connect(
    unsigned short propose_time_out,                          // タイムアウト値
    unsigned short handshake_time_out,                        // ハンドシェイクのタイムアウト値
    const unsigned char* appid,                               // アプリケーション識別子
    unsigned char appid_length,                               // アプリケーション識別子のサイズ
    const unsigned char* data,                                // コネクション確立後に送信するデータ
    unsigned long* data_length                                // コネクション確立後に送信するデータのサイズ
);
LIBRARY_API bool CALLTYPE falp_shutdown(
    unsigned long flag                                        // シャットダウンフラグ
);
LIBRARY_API bool CALLTYPE falp_recv(
    unsigned char* data,                                      // 受信データ
    unsigned long* data_length                                // 受信データ長
);
LIBRARY_API bool CALLTYPE falp_send(
    const unsigned char* data,                                // 送信データ
    unsigned long* data_length                                // 送信データ長
);
LIBRARY_API bool CALLTYPE falp_wait_event(
    unsigned short time_out,                                  // タイムアウト値
    unsigned long* event,                                     // イベント
    unsigned long  event_mask                                 // イベントマスク
);
LIBRARY_API bool CALLTYPE falp_dump_log_to_file(
    const unsigned char* file_name                            // ファイル名
);
LIBRARY_API bool CALLTYPE falp_stop_logging(void);
LIBRARY_API bool CALLTYPE falp_get_last_error_type(
    enumeration_falp_error_type* error_type                   // エラーコード
);
LIBRARY_API bool CALLTYPE falp_listen(
	const int num_of_app_ids,								  // アプリケーション識別子の数
	const int app_id_size[],								  // アプリケーション識別子のサイズ
	const unsigned char* app_id[],							  // アプリケーション識別子
	char result[]											  // 結果
);
LIBRARY_API bool CALLTYPE falp_stop_listen(void);
LIBRARY_API bool CALLTYPE set_falp_target_callback_parameters(
#ifdef _WIN64	// 64bit対応
	const void* handle,										  // ウインドウハンドル
#else
	const int handle,										  // ウインドウハンドル
#endif
	const unsigned char* msg								  // 対向デバイスからの接続があった際に送信するメッセージ
);
LIBRARY_API bool CALLTYPE falp_target_disconnect(void);	
	
#ifdef __cplusplus
}
#endif // __cplusplus

#ifdef MICROSOFT_WINDOWS
#pragma pack(pop, felica_h, 8)
#endif

#endif // __FELICA_MOBILE2_LITE_H__
